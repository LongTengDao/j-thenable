{
	"version":
		3,
	"file":
		"j-thenable.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["_.ts","await.ts","Thenable.ts","Thenable.prototype.ts","export.ts","version?text","resolve.ts","reject.ts","all.ts","race.ts","pend.ts"],
	"sourcesContent":
		[
			"import Promise_prototype from '.Promise.prototype?';\nimport WeakMap from '.WeakMap';\nimport getPrototypeOf from '.Object.getPrototypeOf';\nimport preventExtensions from '.Object.preventExtensions';\nimport undefined from '.undefined';\n\nexport type Executor = (resolve? :(value :any) => void, reject? :(error :any) => void) => void;\nexport type Onfulfilled = (value :any) => any;\nexport type Onrejected = (error :any) => any;\nexport type Onthen = () => any;\nexport type Status = 0 | 1 | 2;\nexport type Private = {\n\t_status :Status,\n\t_value :any,\n\t_dependents :Private[] | undefined,\n\t_onfulfilled :Onfulfilled | undefined,\n\t_onrejected :Onrejected | undefined,\n\t_onthen :Onthen | undefined,\n\tthen (this :Private, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Private,\n};\n\nexport var PENDING :0 = 0;\nexport var FULFILLED :1 = 1;\nexport var REJECTED :2 = 2;\n\nexport var Private_call :(THIS :Private) => void;\nexport var Private :{ new () :Private } = function (this :Private) :void { Private_call(this); } as any;\nexport var isThenable :(value :any) => value is Private;\n\nexport var delete_dependents :(THIS :Private) => void;\nvar delete_onrejected :(THIS :Private) => void;\nvar delete_onfulfilled :(THIS :Private) => void;\nvar delete_onthen :(THIS :Private) => void;\n\nvar delete_onfulfilled_if_has :(THIS :Private) => void;\nvar delete_onrejected_if_has :(THIS :Private) => void;\n\nexport var get_status :(THIS :Private) => Status;\nexport var get_value :(THIS :Private) => any;\nexport var get_dependents :(THIS :Private) => Private[] | undefined;\nvar get_onfulfilled :(THIS :Private) => Onfulfilled | undefined;\nvar get_onrejected :(THIS :Private) => Onrejected | undefined;\nvar get_onthen :(THIS :Private) => Onthen | undefined;\n\nexport var set_status :(THIS :Private, status :Status) => void;\nexport var set_value :(THIS :Private, value :any) => void;\nexport var set_dependents :(THIS :Private, dependents :Private[]) => void;\nexport var set_onfulfilled :(THIS :Private, onfulfilled :Onfulfilled) => void;\nexport var set_onrejected :(THIS :Private, onrejected :Onrejected) => void;\nexport var set_onthen :(THIS :Private, onthen :Onthen) => void;\n\nif ( typeof WeakMap==='function' ) {\n\tvar STATUS :WeakMap<Private, Status> = new WeakMap;\n\tvar VALUE :WeakMap<Private, any> = new WeakMap;\n\tvar DEPENDENTS :WeakMap<Private, Private[]> = new WeakMap;\n\tvar ONFULFILLED :WeakMap<Private, Onfulfilled> = new WeakMap;\n\tvar ONREJECTED :WeakMap<Private, Onrejected> = new WeakMap;\n\tvar ONTHEN :WeakMap<Private, Onthen> = new WeakMap;\n\t\n\tPrivate_call = preventExtensions && /*#__PURE__*/ function () {\n\t\tvar o :any = preventExtensions({});\n\t\tVALUE.set(o, o);\n\t\treturn VALUE.has(o);\n\t}()\n\t\t? function Private_call (THIS :Private) :void { STATUS.set(preventExtensions(THIS), PENDING); }\n\t\t: function Private_call (THIS :Private) :void { STATUS.set(THIS, PENDING); };\n\tisThenable = function isThenable (value :any) :value is Private { return STATUS.has(value); };\n\t\n\t/* delete: */\n\tdelete_dependents = function delete_dependents (THIS :Private) :void { DEPENDENTS['delete'](THIS); };\n\tdelete_onfulfilled = function delete_onfulfilled (THIS :Private) :void { ONFULFILLED['delete'](THIS); };\n\tdelete_onrejected = function delete_onrejected (THIS :Private) :void { ONREJECTED['delete'](THIS); };\n\tdelete_onthen = function delete_onthen (THIS :Private) :void { ONTHEN['delete'](THIS); };\n\tdelete_onfulfilled_if_has = function delete_onfulfilled_if_has (THIS :Private) :void { ONFULFILLED['delete'](THIS); };\n\tdelete_onrejected_if_has = function delete_onrejected_if_has (THIS :Private) :void { ONREJECTED['delete'](THIS); };/**/\n\t/* set undefined: * /\n\tdelete_dependents = function delete_dependents (THIS :Private) :void { DEPENDENTS.set(THIS, undefined!); };\n\tdelete_onfulfilled = function delete_onfulfilled (THIS :Private) :void { ONFULFILLED.set(THIS, undefined!); };\n\tdelete_onrejected = function delete_onrejected (THIS :Private) :void { ONREJECTED.set(THIS, undefined!); };\n\tdelete_onthen = function delete_onthen (THIS :Private) :void { ONTHEN.set(THIS, undefined!); };\n\tdelete_onfulfilled_if_has = function delete_onfulfilled_if_has (THIS :Private) :void { ONFULFILLED.has(THIS) && ONFULFILLED.set(THIS, undefined!); };\n\tdelete_onrejected_if_has = function delete_onrejected_if_has (THIS :Private) :void { ONREJECTED.has(THIS) && ONREJECTED.set(THIS, undefined!); };/**/\n\t\n\tget_status = function get_status (THIS :Private) :Status { return STATUS.get(THIS)!; };\n\tget_value = function get_value (THIS :Private) :any { return VALUE.get(THIS); };\n\tget_dependents = function get_dependents (THIS :Private) :Private[] | undefined { return DEPENDENTS.get(THIS); };\n\tget_onfulfilled = function get_onfulfilled (THIS :Private) :Onfulfilled | undefined { return ONFULFILLED.get(THIS); };\n\tget_onrejected = function get_onrejected (THIS :Private) :Onrejected | undefined { return ONREJECTED.get(THIS); };\n\tget_onthen = function get_onthen (THIS :Private) :Onthen | undefined { return ONTHEN.get(THIS); };\n\t\n\tset_status = function set_status (THIS :Private, status :Status) :void { STATUS.set(THIS, status); };\n\tset_value = function set_value (THIS :Private, value :any) :void { VALUE.set(THIS, value); };\n\tset_dependents = function set_dependents (THIS :Private, dependents :Private[]) :void { DEPENDENTS.set(THIS, dependents); };\n\tset_onfulfilled = function set_onfulfilled (THIS :Private, onfulfilled :Onfulfilled) :void { ONFULFILLED.set(THIS, onfulfilled); };\n\tset_onrejected = function set_onrejected (THIS :Private, onrejected :Onrejected) :void { ONREJECTED.set(THIS, onrejected); };\n\tset_onthen = function set_onthen (THIS :Private, onthen :Onthen) :void { ONTHEN.set(THIS, onthen); };\n}\nelse {\n\tPrivate_call = function Private_call () :void { };\n\tisThenable = getPrototypeOf\n\t\t? function (value :any) :value is Private {\n\t\t\tvar Private_prototype :Private = Private.prototype;\n\t\t\tisThenable = function isThenable (value :any) :value is Private { return value!=null && getPrototypeOf(value)===Private_prototype; };\n\t\t\treturn isThenable(value);\n\t\t}\n\t\t: function isThenable (value :any) :value is Private { return value instanceof Private; };\n\t\n\t/* set undefined: */\n\tdelete_dependents = function delete_dependents (THIS :Private) :void { THIS._dependents = undefined; };\n\tdelete_onrejected = function delete_onrejected (THIS :Private) :void { THIS._onrejected = undefined; };\n\tdelete_onfulfilled = function delete_onfulfilled (THIS :Private) :void { THIS._onfulfilled = undefined; };\n\tdelete_onthen = function delete_onthen (THIS :Private) :void { THIS._onthen = undefined; };\n\tdelete_onfulfilled_if_has = function delete_onfulfilled_if_has (THIS :Private) :void { if ( THIS._onfulfilled ) { THIS._onfulfilled = undefined; } };\n\tdelete_onrejected_if_has = function delete_onrejected_if_has (THIS :Private) :void { if ( THIS._onrejected ) { THIS._onrejected = undefined; } };/**/\n\t\n\tget_status = function get_status (THIS :Private) :Status { return THIS._status; };\n\tget_value = function get_value (THIS :Private) :any { return THIS._value; };\n\tget_dependents = function get_dependents (THIS :Private) :Private[] | undefined { return THIS._dependents; };\n\tget_onfulfilled = function get_onfulfilled (THIS :Private) :Onfulfilled | undefined { return THIS._onfulfilled; };\n\tget_onrejected = function get_onrejected (THIS :Private) :Onrejected | undefined { return THIS._onrejected; };\n\tget_onthen = function get_onthen (THIS :Private) :Onthen | undefined { return THIS._onthen; };\n\t\n\tset_status = function set_status (THIS :Private, status :Status) :void { THIS._status = status; };\n\tset_value = function set_value (THIS :Private, value :any) :void { THIS._value = value; };\n\tset_dependents = function set_dependents (THIS :Private, dependents :Private[]) :void { THIS._dependents = dependents; };\n\tset_onfulfilled = function set_onfulfilled (THIS :Private, onfulfilled :Onfulfilled) :void { THIS._onfulfilled = onfulfilled; };\n\tset_onrejected = function set_onrejected (THIS :Private, onrejected :Onrejected) :void { THIS._onrejected = onrejected; };\n\tset_onthen = function set_onthen (THIS :Private, onthen :Onthen) :void { THIS._onthen = onthen; };\n}\n\nexport var isPromise :(value :any) => value is Readonly<Promise<any>> = Promise_prototype\n\t? getPrototypeOf\n\t\t? function isPromise (value :any) :value is Readonly<Promise<any>> { return value!=null && getPrototypeOf(value)===Promise_prototype; }\n\t\t: function () {\n\t\t\tfunction Promise () {}\n\t\t\tPromise.prototype = Promise_prototype;\n\t\t\treturn function isPromise (value :any) :value is Readonly<Promise<any>> { return value instanceof Promise; };\n\t\t}()\n\t: function isPromise () { return false; } as any;\n\ntype PrependStack = { nextStack :PrependStack | null, thenable :Private, onthen :Onthen };\nvar prependStack :PrependStack | null = null;\nvar prepending :boolean = false;\nexport function prepend (thenable :Private) :void {\n\tvar _onthen :Onthen | undefined = get_onthen(thenable);\n\tif ( !_onthen ) { return; }\n\tdelete_onthen(thenable);\n\tif ( prepending ) {\n\t\tprependStack = { nextStack: prependStack, thenable: thenable, onthen: _onthen };\n\t\treturn;\n\t}\n\tprepending = true;\n\tfor ( ; ; ) {\n\t\ttry {\n\t\t\tvar value :any = _onthen();\n\t\t\tif ( isThenable(value) ) {\n\t\t\t\t_onthen = get_onthen(value);\n\t\t\t\tif ( _onthen ) {\n\t\t\t\t\tdelete_onthen(value);\n\t\t\t\t\tget_dependents(value)!.push(thenable);\n\t\t\t\t\tprependStack = { nextStack: prependStack, thenable: value, onthen: _onthen };\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar status :Status = get_status(value);\n\t\t\t\t\tif ( status===PENDING ) { get_dependents(value)!.push(thenable); }\n\t\t\t\t\telse { flow(thenable, get_value(value), status); }\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( isPromise(value) ) { depend(thenable, value); }\n\t\t\telse { flow(thenable, value, FULFILLED); }\n\t\t}\n\t\tcatch (error) { flow(thenable, error, REJECTED); }\n\t\tif ( !prependStack ) { break; }\n\t\tthenable = prependStack.thenable;\n\t\t_onthen = prependStack.onthen;\n\t\tprependStack = prependStack.nextStack;\n\t}\n\tprepending = false;\n}\n\ntype FlowStack = { nextStack :FlowStack | null, thenable :Private, value :any, status :Status };\nvar flowStack :FlowStack | null = null;\nvar flowing :boolean = false;\nexport function flow (thenable :Private, value :any, status :Status) :void {\n\tif ( flowing ) {\n\t\tflowStack = { nextStack: flowStack, thenable: thenable, value: value, status: status };\n\t\treturn;\n\t}\n\tflowing = true;\n\tfor ( var _status :Status; ; ) {\n\t\tstack: {\n\t\t\tif ( status===FULFILLED ) {\n\t\t\t\tdelete_onrejected_if_has(thenable);\n\t\t\t\tvar _onfulfilled :Onfulfilled | undefined = get_onfulfilled(thenable);\n\t\t\t\tif ( _onfulfilled ) {\n\t\t\t\t\tdelete_onfulfilled(thenable);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = _onfulfilled(value);\n\t\t\t\t\t\tif ( isThenable(value) ) {\n\t\t\t\t\t\t\tprepend(value);\n\t\t\t\t\t\t\t_status = get_status(value);\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tget_dependents(value)!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = get_value(value);\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPromise(value) ) {\n\t\t\t\t\t\t\tdepend(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( get_status(thenable)!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t\tstatus = REJECTED;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdelete_onfulfilled_if_has(thenable);\n\t\t\t\tvar _onrejected :Onrejected | undefined = get_onrejected(thenable);\n\t\t\t\tif ( _onrejected ) {\n\t\t\t\t\tdelete_onrejected(thenable);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = _onrejected(value);\n\t\t\t\t\t\tif ( isThenable(value) ) {\n\t\t\t\t\t\t\tprepend(value);\n\t\t\t\t\t\t\t_status = get_status(value);\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tget_dependents(value)!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = get_value(value);\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPromise(value) ) {\n\t\t\t\t\t\t\tdepend(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { status = FULFILLED; }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( get_status(thenable)!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tset_value(thenable, value);\n\t\t\tset_status(thenable, status);\n\t\t\tvar _dependents :Private[] | undefined = get_dependents(thenable);\n\t\t\tif ( _dependents ) {\n\t\t\t\tdelete_dependents(thenable);\n\t\t\t\tfor ( var index :number = _dependents.length; index; ) {\n\t\t\t\t\tflowStack = { nextStack: flowStack, thenable: _dependents[--index], value: value, status: status };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( !flowStack ) { break; }\n\t\tthenable = flowStack.thenable;\n\t\tvalue = flowStack.value;\n\t\tstatus = flowStack.status;\n\t\tflowStack = flowStack.nextStack;\n\t}\n\tflowing = false;\n}\n\nexport function depend (thenable :Private, value :Readonly<{ then (...args :any[]) :any }>) :void {\n\tvar red :boolean | undefined;\n\tvalue.then(\n\t\tfunction onfulfilled (value :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tflow(thenable, value, FULFILLED);\n\t\t},\n\t\tfunction onrejected (error :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tflow(thenable, error, REJECTED);\n\t\t}\n\t);\n}\n",
			"import { isThenable, FULFILLED, REJECTED, prepend, get_status, get_value } from './_';\n\nexport default {\n\tawait: function (value :any) :any {\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tswitch ( get_status(value) ) {\n\t\t\t\tcase FULFILLED:\n\t\t\t\t\treturn get_value(value);\n\t\t\t\tcase REJECTED:\n\t\t\t\t\tthrow get_value(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}.await;\n",
			"import TypeError from '.TypeError';\n\nimport { PENDING, FULFILLED, REJECTED, Status, Private, isThenable, isPromise, flow, depend, prepend, Executor, Onfulfilled, Onrejected, Private_call, get_status, get_dependents, get_value, set_dependents, set_value, set_status, delete_dependents } from './_';\n\nexport { Public as default };\n\ntype Public = Readonly<object & {\n\tthen (this :Public, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Public,\n}>;\n\nvar Public :{ new (executor :Executor) :Public } = function Thenable (this :Private, executor :Executor) :void {\n\tif ( typeof executor!=='function' ) { throw TypeError('new Thenable(executor is not a function)'); }\n\tvar executed :boolean | undefined;\n\tvar red :boolean | undefined;\n\tvar _value :any;\n\tvar _status :Status | undefined;\n\tvar THIS :Private = this;\n\t//this instanceof Thenable || throw(TypeError());\n\tPrivate_call(THIS);\n\ttry {\n\t\texecutor(\n\t\t\tfunction resolve (value :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif ( isThenable(value) ) {\n\t\t\t\t\t\t\tprepend(value);\n\t\t\t\t\t\t\t_status = get_status(value);\n\t\t\t\t\t\t\tif ( _status===PENDING ) { get_dependents(value)!.push(THIS); }\n\t\t\t\t\t\t\telse { flow(THIS, get_value(value), _status!); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPromise(value) ) { depend(THIS, value); }\n\t\t\t\t\t\telse { flow(THIS, value, FULFILLED); }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) { if ( get_status(THIS)===PENDING ) { flow(THIS, error, REJECTED); } }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_value = value;\n\t\t\t\t\t_status = FULFILLED;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction reject (error :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) { flow(THIS, error, REJECTED); }\n\t\t\t\telse {\n\t\t\t\t\t_value = error;\n\t\t\t\t\t_status = REJECTED;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tif ( !red ) {\n\t\t\texecuted = true;\n\t\t\tset_dependents(THIS, []);\n\t\t\treturn;\n\t\t}\n\t}\n\tcatch (error) {\n\t\tif ( !red ) {\n\t\t\tred = true;\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\treturn;\n\t\t}\n\t}\n\ttry { rEd(THIS, _status!, _value); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\tdelete_dependents(THIS);\n\t\t}\n\t}\n} as any;\n\nfunction rEd (THIS :Private, status :Status, value :any) :void {\n\tif ( status===FULFILLED ) {\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tstatus = get_status(value);\n\t\t\tif ( status===PENDING ) {\n\t\t\t\tset_dependents(THIS, []);\n\t\t\t\tget_dependents(value)!.push(THIS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tset_value(THIS, get_value(value));\n\t\t\t\tset_status(THIS, status);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif ( isPromise(value) ) {\n\t\t\tset_dependents(THIS, []);\n\t\t\tdepend(THIS, value);\n\t\t\treturn;\n\t\t}\n\t}\n\tset_value(THIS, value);\n\tset_status(THIS, status);\n}\n",
			"import TypeError from '.TypeError';\nimport WeakMap from '.WeakMap';\nimport undefined from '.undefined';\n\nimport { PENDING, REJECTED, FULFILLED, Private, isThenable, isPromise, Status, depend, prepend, Onfulfilled, Onrejected, get_status, set_dependents, set_onfulfilled, set_onrejected, get_dependents, set_value, get_value, set_status } from './_';\n\nexport default typeof WeakMap==='function'\n\t? { then: then }\n\t: {\n\t\t_status: PENDING,\n\t\t_value: undefined,\n\t\t_dependents: undefined,\n\t\t_onfulfilled: undefined,\n\t\t_onrejected: undefined,\n\t\t_onthen: undefined,\n\t\tthen: then\n\t};\n\nfunction then (this :Private, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Private {\n\tvar THIS :Private = this;\n\tif ( isThenable(THIS) ) {\n\t\tprepend(THIS);\n\t\tvar thenable :Private = new Private;\n\t\tswitch ( get_status(THIS) ) {\n\t\t\tcase PENDING:\n\t\t\t\tset_dependents(thenable, []);\n\t\t\t\tif ( typeof onfulfilled==='function' ) { set_onfulfilled(thenable, onfulfilled); }\n\t\t\t\tif ( typeof onrejected==='function' ) { set_onrejected(thenable, onrejected); }\n\t\t\t\tget_dependents(THIS)!.push(thenable);\n\t\t\t\treturn thenable;\n\t\t\tcase FULFILLED:\n\t\t\t\tif ( typeof onfulfilled==='function' ) { onto(THIS, onfulfilled, thenable); }\n\t\t\t\telse {\n\t\t\t\t\tset_value(thenable, get_value(THIS));\n\t\t\t\t\tset_status(thenable, FULFILLED);\n\t\t\t\t}\n\t\t\t\treturn thenable;\n\t\t\tcase REJECTED:\n\t\t\t\tif ( typeof onrejected==='function' ) { onto(THIS, onrejected, thenable); }\n\t\t\t\telse {\n\t\t\t\t\tset_value(thenable, get_value(THIS));\n\t\t\t\t\tset_status(thenable, REJECTED);\n\t\t\t\t}\n\t\t\t\treturn thenable;\n\t\t}\n\t}\n\tthrow TypeError('Method Thenable.prototype.then called on incompatible receiver');\n}\n\nfunction onto (THIS :Private, on :(_ :any) => any, thenable :Private) {\n\ttry { onto_try(thenable, on(get_value(THIS))); }\n\tcatch (error) {\n\t\tif ( get_status(thenable)===PENDING ) {\n\t\t\tset_value(thenable, error);\n\t\t\tset_status(thenable, REJECTED);\n\t\t}\n\t}\n}\n\nfunction onto_try (thenable :Private, value :any) :void {\n\tif ( isThenable(value) ) {\n\t\tprepend(value);\n\t\tvar status :Status = get_status(value);\n\t\tif ( status===PENDING ) {\n\t\t\tset_dependents(thenable, []);\n\t\t\tget_dependents(value)!.push(thenable);\n\t\t}\n\t\telse {\n\t\t\tset_value(thenable, get_value(value));\n\t\t\tset_status(thenable, status);\n\t\t}\n\t}\n\telse if ( isPromise(value) ) {\n\t\tset_dependents(thenable, []);\n\t\tdepend(thenable, value);\n\t}\n\telse {\n\t\tset_value(thenable, value);\n\t\tset_status(thenable, FULFILLED);\n\t}\n}\n",
			"import WeakMap from '.WeakMap';\nimport freeze from '.Object.freeze';\nimport seal from '.Object.seal';\n\nimport version from './version?text';\nexport { version };\n\nimport resolve from './resolve';\nimport reject from './reject';\nimport all from './all';\nimport race from './race';\nimport pend from './pend';\nimport AWAIT from './await';\nexport {\n\tresolve,\n\treject,\n\tall,\n\trace,\n\tpend,\n\tAWAIT as await,\n};\n\nimport { Private, Executor } from './_';\nimport Public from './Thenable';\nimport prototype from './Thenable.prototype';\nPublic.prototype = Private.prototype = typeof WeakMap==='function' ? /*#__PURE__*/ freeze(prototype) : seal ? /*#__PURE__*/ seal(prototype) : prototype;\n\nimport Default from '.default?=';\nexport default Default(Public, {\n\tversion: version,\n\tThenable: Public,\n\tresolve: resolve,\n\treject: reject,\n\tall: all,\n\trace: race,\n\tpend: pend,\n\tawait: AWAIT\n});\n\nvar Thenable :Readonly<{ new (executor :Executor) :Public }> = freeze ? /*#__PURE__*/ freeze(Public) : Public;\ntype Thenable = Public;\nexport { Thenable };\n",
			"export default '4.2.0';",
			"import { isThenable, isPromise, depend, FULFILLED, REJECTED, PENDING, Private, set_dependents, set_value, set_status, get_status } from './_';\n\nexport default function resolve (value? :any) :Public {\n\tif ( isThenable(value) ) { return value; }\n\tvar THIS :Private = new Private;\n\tif ( isPromise(value) ) {\n\t\tset_dependents(THIS, []);\n\t\ttry_depend(THIS, value);\n\t}\n\telse {\n\t\tset_value(THIS, value);\n\t\tset_status(THIS, FULFILLED);\n\t}\n\treturn THIS;\n};\n\nfunction try_depend (THIS :Private, value :any) {\n\ttry { depend(THIS, value); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t}\n\t}\n}\n\nimport Public from './Thenable';",
			"import { REJECTED, Private, set_status, set_value } from './_';\n\nexport default function reject (error? :any) :Public {\n\tvar THIS :Private = new Private;\n\tset_status(THIS, REJECTED);\n\tset_value(THIS, error);\n\treturn THIS;\n};\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { PENDING, REJECTED, FULFILLED, flow, prepend, isThenable, isPromise, Status, Private, Onfulfilled, get_status, set_value, set_status, delete_dependents, set_dependents, get_dependents, get_value } from './_';\n\nexport default function all (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { all_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\tdelete_dependents(THIS);\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction all_try (values :readonly any[], THIS :Private) :void {\n\tset_dependents(THIS, []);\n\tfunction _onrejected (error :any) :any { get_status(THIS)===PENDING && flow(THIS, error, REJECTED); }\n\tvar _value :any[] = [];\n\tvar count :number = 0;\n\tvar counted :boolean | undefined;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tvar _status :Status = get_status(value);\n\t\t\tif ( _status===PENDING ) {\n\t\t\t\t++count;\n\t\t\t\t_value[index] = undefined;\n\t\t\t\tget_dependents(value)!.push({\n\t\t\t\t\t_status: 0,\n\t\t\t\t\t_value: undefined,\n\t\t\t\t\t_dependents: undefined,\n\t\t\t\t\t_onfulfilled: function (index :number) :Onfulfilled {\n\t\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\t\tif ( !--count && counted ) { flow(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}(index),\n\t\t\t\t\t_onrejected: _onrejected\n\t\t\t\t} as Private);\n\t\t\t}\n\t\t\telse if ( _status===REJECTED ) {\n\t\t\t\tset_value(THIS, get_value(value));\n\t\t\t\tset_status(THIS, REJECTED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse { _value[index] = get_value(value); }\n\t\t}\n\t\telse if ( isPromise(value) ) {\n\t\t\t++count;\n\t\t\t_value[index] = undefined;\n\t\t\tvalue.then(\n\t\t\t\tfunction (index :number) :Onfulfilled {\n\t\t\t\t\tvar red :boolean | undefined;\n\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\tif ( red ) { return; }\n\t\t\t\t\t\tred = true;\n\t\t\t\t\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\tif ( !--count && counted ) { flow(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}(index),\n\t\t\t\t_onrejected\n\t\t\t);\n\t\t}\n\t\telse { _value[index] = value; }\n\t}\n\tcounted = true;\n\tif ( !count && get_status(THIS)===PENDING ) {\n\t\tset_value(THIS, _value);\n\t\tset_status(THIS, FULFILLED);\n\t\tdelete_dependents(THIS);\n\t}\n}\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { flow, prepend, PENDING, FULFILLED, REJECTED, Status, isThenable, isPromise, Private, get_status, set_value, set_status, delete_dependents, set_dependents, get_dependents, get_value } from './_';\n\nexport default function race (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { race_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\tdelete_dependents(THIS);\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction race_try (values :readonly any[], THIS :Private) :void {\n\tset_dependents(THIS, []);\n\tfunction _onfulfilled (value :any) :any { get_status(THIS)===PENDING && flow(THIS, value, FULFILLED); }\n\tfunction _onrejected (error :any) :any { get_status(THIS)===PENDING && flow(THIS, error, REJECTED); }\n\tvar that :Private = {\n\t\t_status: 0,\n\t\t_value: undefined,\n\t\t_dependents: undefined,\n\t\t_onfulfilled: _onfulfilled,\n\t\t_onrejected: _onrejected\n\t} as Private;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tvar _status :Status = get_status(value);\n\t\t\tif ( _status===PENDING ) { get_dependents(value)!.push(that); }\n\t\t\telse {\n\t\t\t\tset_value(THIS, get_value(value));\n\t\t\t\tset_status(THIS, _status);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if ( isPromise(value) ) {\n\t\t\tvalue.then(_onfulfilled, _onrejected);\n\t\t\tif ( get_status(THIS)!==PENDING ) { break; }\n\t\t}\n\t\telse {\n\t\t\tset_value(THIS, value);\n\t\t\tset_status(THIS, FULFILLED);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nimport Public from './Thenable';",
			"import TypeError from '.TypeError';\n\nimport { Private, Onthen, set_dependents, set_onthen } from './_';\n\nexport default function pend (onthen :Onthen) :Public {\n\tif ( typeof onthen!=='function' ) { throw TypeError('Thenable.pend(onthen is not a function)'); }\n\tvar THIS :Private = new Private;\n\tset_dependents(THIS, []);\n\tset_onthen(THIS, onthen);\n\treturn THIS;\n};\n\nimport Public from './Thenable';"
		],
	"names":
		["Private_call","isThenable","delete_dependents","delete_onrejected","delete_onfulfilled","delete_onthen","delete_onfulfilled_if_has","delete_onrejected_if_has","get_status","get_value","get_dependents","get_onfulfilled","get_onrejected","get_onthen","set_status","set_value","set_dependents","set_onfulfilled","set_onrejected","set_onthen","PENDING","FULFILLED","REJECTED","Private","this","WeakMap","STATUS","VALUE","DEPENDENTS","ONFULFILLED","ONREJECTED","ONTHEN","preventExtensions","o","set","has","THIS","value","get","status","dependents","onfulfilled","onrejected","onthen","getPrototypeOf","Private_prototype","prototype","_dependents","undefined","_onrejected","_onfulfilled","_onthen","_status","_value","isPromise","Promise_prototype","Promise","prependStack","prepending","prepend","thenable","nextStack","push","flow","depend","error","flowStack","flowing","stack","index","length","red","then","AWAIT","Public","executor","TypeError","executed","rEd","onto","on","onto_try","freeze","seal","Default","version","Thenable","resolve","try_depend","reject","all","values","all_try","counted","count","race","race_try","that","pend","await"],
	"mappings":
		"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"
}