{
	"version":
		3,
	"file":
		"j-thenable.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["_.ts","await.ts","Thenable.ts","Thenable.prototype.ts","export.ts","version?text","resolve.ts","reject.ts","all.ts","race.ts","pend.ts"],
	"sourcesContent":
		[
			"import Promise_prototype from '.Promise.prototype?';\nimport WeakMap from '.WeakMap';\nimport getPrototypeOf from '.Object.getPrototypeOf';\nimport undefined from '.undefined';\n\nexport type Executor = (resolve? :(value :any) => void, reject? :(error :any) => void) => void;\nexport type Onfulfilled = (value :any) => any;\nexport type Onrejected = (error :any) => any;\nexport type Onthen = () => any;\nexport type Status = 0 | 1 | 2;\nexport type Private = {\n\t_status :Status,\n\t_value :any,\n\t_dependents :Private[] | undefined,\n\t_onfulfilled :Onfulfilled | undefined,\n\t_onrejected :Onrejected | undefined,\n\t_onthen :Onthen | undefined,\n\tthen (this :Private, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Private,\n};\n\nexport var PENDING :0 = 0;\nexport var FULFILLED :1 = 1;\nexport var REJECTED :2 = 2;\n\nexport var Private_call :(THIS :Private) => void;\nexport var Private :{ new () :Private } = function (this :Private) :void { Private_call(this); } as any;\nexport var isThenable :(value :any) => value is Private;\n\nexport var delete_dependents :(THIS :Private) => void;\nvar delete_onrejected :(THIS :Private) => void;\nvar delete_onfulfilled :(THIS :Private) => void;\nvar delete_onthen :(THIS :Private) => void;\n\nvar delete_onfulfilled_if_has :(THIS :Private) => void;\nvar delete_onrejected_if_has :(THIS :Private) => void;\n\nexport var get_status :(THIS :Private) => Status;\nexport var get_value :(THIS :Private) => any;\nexport var get_dependents :(THIS :Private) => Private[] | undefined;\nvar get_onfulfilled :(THIS :Private) => Onfulfilled | undefined;\nvar get_onrejected :(THIS :Private) => Onrejected | undefined;\nvar get_onthen :(THIS :Private) => Onthen | undefined;\n\nexport var set_status :(THIS :Private, status :Status) => void;\nexport var set_value :(THIS :Private, value :any) => void;\nexport var set_dependents :(THIS :Private, dependents :Private[]) => void;\nexport var set_onfulfilled :(THIS :Private, onfulfilled :Onfulfilled) => void;\nexport var set_onrejected :(THIS :Private, onrejected :Onrejected) => void;\nexport var set_onthen :(THIS :Private, onthen :Onthen) => void;\n\nif ( typeof WeakMap==='function' ) {\n\tvar STATUS :WeakMap<Private, Status> = new WeakMap;\n\tvar VALUE :WeakMap<Private, any> = new WeakMap;\n\tvar DEPENDENTS :WeakMap<Private, Private[]> = new WeakMap;\n\tvar ONFULFILLED :WeakMap<Private, Onfulfilled> = new WeakMap;\n\tvar ONREJECTED :WeakMap<Private, Onrejected> = new WeakMap;\n\tvar ONTHEN :WeakMap<Private, Onthen> = new WeakMap;\n\t\n\tPrivate_call = function Private_call (THIS :Private) :void { STATUS.set(THIS, PENDING); };\n\tisThenable = function isThenable (value :any) :value is Private { return STATUS.has(value); };\n\t\n\t/* delete: */\n\tdelete_dependents = function delete_dependents (THIS :Private) :void { DEPENDENTS['delete'](THIS); };\n\tdelete_onfulfilled = function delete_onfulfilled (THIS :Private) :void { ONFULFILLED['delete'](THIS); };\n\tdelete_onrejected = function delete_onrejected (THIS :Private) :void { ONREJECTED['delete'](THIS); };\n\tdelete_onthen = function delete_onthen (THIS :Private) :void { ONTHEN['delete'](THIS); };\n\tdelete_onfulfilled_if_has = function delete_onfulfilled_if_has (THIS :Private) :void { ONFULFILLED['delete'](THIS); };\n\tdelete_onrejected_if_has = function delete_onrejected_if_has (THIS :Private) :void { ONREJECTED['delete'](THIS); };/**/\n\t/* set undefined: * /\n\tdelete_dependents = function delete_dependents (THIS :Private) :void { DEPENDENTS.set(THIS, undefined!); };\n\tdelete_onfulfilled = function delete_onfulfilled (THIS :Private) :void { ONFULFILLED.set(THIS, undefined!); };\n\tdelete_onrejected = function delete_onrejected (THIS :Private) :void { ONREJECTED.set(THIS, undefined!); };\n\tdelete_onthen = function delete_onthen (THIS :Private) :void { ONTHEN.set(THIS, undefined!); };\n\tdelete_onfulfilled_if_has = function delete_onfulfilled_if_has (THIS :Private) :void { ONFULFILLED.has(THIS) && ONFULFILLED.set(THIS, undefined!); };\n\tdelete_onrejected_if_has = function delete_onrejected_if_has (THIS :Private) :void { ONREJECTED.has(THIS) && ONREJECTED.set(THIS, undefined!); };/**/\n\t\n\tget_status = function get_status (THIS :Private) :Status { return STATUS.get(THIS)!; };\n\tget_value = function get_value (THIS :Private) :any { return VALUE.get(THIS); };\n\tget_dependents = function get_dependents (THIS :Private) :Private[] | undefined { return DEPENDENTS.get(THIS); };\n\tget_onfulfilled = function get_onfulfilled (THIS :Private) :Onfulfilled | undefined { return ONFULFILLED.get(THIS); };\n\tget_onrejected = function get_onrejected (THIS :Private) :Onrejected | undefined { return ONREJECTED.get(THIS); };\n\tget_onthen = function get_onthen (THIS :Private) :Onthen | undefined { return ONTHEN.get(THIS); };\n\t\n\tset_status = function set_status (THIS :Private, status :Status) :void { STATUS.set(THIS, status); };\n\tset_value = function set_value (THIS :Private, value :any) :void { VALUE.set(THIS, value); };\n\tset_dependents = function set_dependents (THIS :Private, dependents :Private[]) :void { DEPENDENTS.set(THIS, dependents); };\n\tset_onfulfilled = function set_onfulfilled (THIS :Private, onfulfilled :Onfulfilled) :void { ONFULFILLED.set(THIS, onfulfilled); };\n\tset_onrejected = function set_onrejected (THIS :Private, onrejected :Onrejected) :void { ONREJECTED.set(THIS, onrejected); };\n\tset_onthen = function set_onthen (THIS :Private, onthen :Onthen) :void { ONTHEN.set(THIS, onthen); };\n}\nelse {\n\tPrivate_call = function Private_call () :void { };\n\tisThenable = getPrototypeOf\n\t\t? function (value :any) :value is Private {\n\t\t\tvar Private_prototype :Private = Private.prototype;\n\t\t\tisThenable = function isThenable (value :any) :value is Private { return value!=null && getPrototypeOf(value)===Private_prototype; };\n\t\t\treturn isThenable(value);\n\t\t}\n\t\t: function isThenable (value :any) :value is Private { return value instanceof Private; };\n\t\n\t/* set undefined: */\n\tdelete_dependents = function delete_dependents (THIS :Private) :void { THIS._dependents = undefined; };\n\tdelete_onrejected = function delete_onrejected (THIS :Private) :void { THIS._onrejected = undefined; };\n\tdelete_onfulfilled = function delete_onfulfilled (THIS :Private) :void { THIS._onfulfilled = undefined; };\n\tdelete_onthen = function delete_onthen (THIS :Private) :void { THIS._onthen = undefined; };\n\tdelete_onfulfilled_if_has = function delete_onfulfilled_if_has (THIS :Private) :void { if ( THIS._onfulfilled ) { THIS._onfulfilled = undefined; } };\n\tdelete_onrejected_if_has = function delete_onrejected_if_has (THIS :Private) :void { if ( THIS._onrejected ) { THIS._onrejected = undefined; } };/**/\n\t\n\tget_status = function get_status (THIS :Private) :Status { return THIS._status; };\n\tget_value = function get_value (THIS :Private) :any { return THIS._value; };\n\tget_dependents = function get_dependents (THIS :Private) :Private[] | undefined { return THIS._dependents; };\n\tget_onfulfilled = function get_onfulfilled (THIS :Private) :Onfulfilled | undefined { return THIS._onfulfilled; };\n\tget_onrejected = function get_onrejected (THIS :Private) :Onrejected | undefined { return THIS._onrejected; };\n\tget_onthen = function get_onthen (THIS :Private) :Onthen | undefined { return THIS._onthen; };\n\t\n\tset_status = function set_status (THIS :Private, status :Status) :void { THIS._status = status; };\n\tset_value = function set_value (THIS :Private, value :any) :void { THIS._value = value; };\n\tset_dependents = function set_dependents (THIS :Private, dependents :Private[]) :void { THIS._dependents = dependents; };\n\tset_onfulfilled = function set_onfulfilled (THIS :Private, onfulfilled :Onfulfilled) :void { THIS._onfulfilled = onfulfilled; };\n\tset_onrejected = function set_onrejected (THIS :Private, onrejected :Onrejected) :void { THIS._onrejected = onrejected; };\n\tset_onthen = function set_onthen (THIS :Private, onthen :Onthen) :void { THIS._onthen = onthen; };\n}\n\nexport var isPromise :(value :any) => value is Readonly<Promise<any>> = Promise_prototype\n\t? getPrototypeOf\n\t\t? function isPromise (value :any) :value is Readonly<Promise<any>> { return value!=null && getPrototypeOf(value)===Promise_prototype; }\n\t\t: function () {\n\t\t\tfunction Promise () {}\n\t\t\tPromise.prototype = Promise_prototype;\n\t\t\treturn function isPromise (value :any) :value is Readonly<Promise<any>> { return value instanceof Promise; };\n\t\t}()\n\t: function isPromise () { return false; } as any;\n\ntype PrependStack = { nextStack :PrependStack | null, thenable :Private, onthen :Onthen };\nvar prependStack :PrependStack | null = null;\nvar prepending :boolean = false;\nexport function prepend (thenable :Private) :void {\n\tvar _onthen :Onthen | undefined = get_onthen(thenable);\n\tif ( !_onthen ) { return; }\n\tdelete_onthen(thenable);\n\tif ( prepending ) {\n\t\tprependStack = { nextStack: prependStack, thenable: thenable, onthen: _onthen };\n\t\treturn;\n\t}\n\tprepending = true;\n\tfor ( ; ; ) {\n\t\ttry {\n\t\t\tvar value :any = _onthen();\n\t\t\tif ( isThenable(value) ) {\n\t\t\t\t_onthen = get_onthen(value);\n\t\t\t\tif ( _onthen ) {\n\t\t\t\t\tdelete_onthen(value);\n\t\t\t\t\tget_dependents(value)!.push(thenable);\n\t\t\t\t\tprependStack = { nextStack: prependStack, thenable: value, onthen: _onthen };\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar status :Status = get_status(value);\n\t\t\t\t\tif ( status===PENDING ) { get_dependents(value)!.push(thenable); }\n\t\t\t\t\telse { flow(thenable, get_value(value), status); }\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( isPromise(value) ) { depend(thenable, value); }\n\t\t\telse { flow(thenable, value, FULFILLED); }\n\t\t}\n\t\tcatch (error) { flow(thenable, error, REJECTED); }\n\t\tif ( !prependStack ) { break; }\n\t\tthenable = prependStack.thenable;\n\t\t_onthen = prependStack.onthen;\n\t\tprependStack = prependStack.nextStack;\n\t}\n\tprepending = false;\n}\n\ntype FlowStack = { nextStack :FlowStack | null, thenable :Private, value :any, status :Status };\nvar flowStack :FlowStack | null = null;\nvar flowing :boolean = false;\nexport function flow (thenable :Private, value :any, status :Status) :void {\n\tif ( flowing ) {\n\t\tflowStack = { nextStack: flowStack, thenable: thenable, value: value, status: status };\n\t\treturn;\n\t}\n\tflowing = true;\n\tfor ( var _status :Status; ; ) {\n\t\tstack: {\n\t\t\tif ( status===FULFILLED ) {\n\t\t\t\tdelete_onrejected_if_has(thenable);\n\t\t\t\tvar _onfulfilled :Onfulfilled | undefined = get_onfulfilled(thenable);\n\t\t\t\tif ( _onfulfilled ) {\n\t\t\t\t\tdelete_onfulfilled(thenable);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = _onfulfilled(value);\n\t\t\t\t\t\tif ( isThenable(value) ) {\n\t\t\t\t\t\t\tprepend(value);\n\t\t\t\t\t\t\t_status = get_status(value);\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tget_dependents(value)!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = get_value(value);\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPromise(value) ) {\n\t\t\t\t\t\t\tdepend(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( get_status(thenable)!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t\tstatus = REJECTED;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdelete_onfulfilled_if_has(thenable);\n\t\t\t\tvar _onrejected :Onrejected | undefined = get_onrejected(thenable);\n\t\t\t\tif ( _onrejected ) {\n\t\t\t\t\tdelete_onrejected(thenable);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = _onrejected(value);\n\t\t\t\t\t\tif ( isThenable(value) ) {\n\t\t\t\t\t\t\tprepend(value);\n\t\t\t\t\t\t\t_status = get_status(value);\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tget_dependents(value)!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = get_value(value);\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPromise(value) ) {\n\t\t\t\t\t\t\tdepend(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { status = FULFILLED; }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( get_status(thenable)!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tset_value(thenable, value);\n\t\t\tset_status(thenable, status);\n\t\t\tvar _dependents :Private[] | undefined = get_dependents(thenable);\n\t\t\tif ( _dependents ) {\n\t\t\t\tdelete_dependents(thenable);\n\t\t\t\tfor ( var index :number = _dependents.length; index; ) {\n\t\t\t\t\tflowStack = { nextStack: flowStack, thenable: _dependents[--index], value: value, status: status };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( !flowStack ) { break; }\n\t\tthenable = flowStack.thenable;\n\t\tvalue = flowStack.value;\n\t\tstatus = flowStack.status;\n\t\tflowStack = flowStack.nextStack;\n\t}\n\tflowing = false;\n}\n\nexport function depend (thenable :Private, value :Readonly<{ then (...args :any[]) :any }>) :void {\n\tvar red :boolean | undefined;\n\tvalue.then(\n\t\tfunction onfulfilled (value :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tflow(thenable, value, FULFILLED);\n\t\t},\n\t\tfunction onrejected (error :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tflow(thenable, error, REJECTED);\n\t\t}\n\t);\n}\n",
			"import { isThenable, FULFILLED, REJECTED, prepend, get_status, get_value } from './_';\n\nexport default {\n\tawait: function (value :any) :any {\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tswitch ( get_status(value) ) {\n\t\t\t\tcase FULFILLED:\n\t\t\t\t\treturn get_value(value);\n\t\t\t\tcase REJECTED:\n\t\t\t\t\tthrow get_value(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}.await;\n",
			"import TypeError from '.TypeError';\n\nimport { PENDING, FULFILLED, REJECTED, Status, Private, isThenable, isPromise, flow, depend, prepend, Executor, Onfulfilled, Onrejected, Private_call, get_status, get_dependents, get_value, set_dependents, set_value, set_status, delete_dependents } from './_';\n\nexport { Public as default };\n\ntype Public = Readonly<object & {\n\tthen (this :Public, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Public,\n}>;\n\nvar Public :{ new (executor :Executor) :Public } = function Thenable (this :Private, executor :Executor) :void {\n\tif ( typeof executor!=='function' ) { throw TypeError('new Thenable(executor is not a function)'); }\n\tvar executed :boolean | undefined;\n\tvar red :boolean | undefined;\n\tvar _value :any;\n\tvar _status :Status | undefined;\n\tvar THIS :Private = this;\n\t//this instanceof Thenable || throw(TypeError());\n\tPrivate_call(THIS);\n\ttry {\n\t\texecutor(\n\t\t\tfunction resolve (value :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif ( isThenable(value) ) {\n\t\t\t\t\t\t\tprepend(value);\n\t\t\t\t\t\t\t_status = get_status(value);\n\t\t\t\t\t\t\tif ( _status===PENDING ) { get_dependents(value)!.push(THIS); }\n\t\t\t\t\t\t\telse { flow(THIS, get_value(value), _status!); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPromise(value) ) { depend(THIS, value); }\n\t\t\t\t\t\telse { flow(THIS, value, FULFILLED); }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) { if ( get_status(THIS)===PENDING ) { flow(THIS, error, REJECTED); } }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_value = value;\n\t\t\t\t\t_status = FULFILLED;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction reject (error :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) { flow(THIS, error, REJECTED); }\n\t\t\t\telse {\n\t\t\t\t\t_value = error;\n\t\t\t\t\t_status = REJECTED;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tif ( !red ) {\n\t\t\texecuted = true;\n\t\t\tset_dependents(THIS, []);\n\t\t\treturn;\n\t\t}\n\t}\n\tcatch (error) {\n\t\tif ( !red ) {\n\t\t\tred = true;\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\treturn;\n\t\t}\n\t}\n\ttry { rEd(THIS, _status!, _value); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\tdelete_dependents(THIS);\n\t\t}\n\t}\n} as any;\n\nfunction rEd (THIS :Private, status :Status, value :any) :void {\n\tif ( status===FULFILLED ) {\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tstatus = get_status(value);\n\t\t\tif ( status===PENDING ) {\n\t\t\t\tset_dependents(THIS, []);\n\t\t\t\tget_dependents(value)!.push(THIS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tset_value(THIS, get_value(value));\n\t\t\t\tset_status(THIS, status);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif ( isPromise(value) ) {\n\t\t\tset_dependents(THIS, []);\n\t\t\tdepend(THIS, value);\n\t\t\treturn;\n\t\t}\n\t}\n\tset_value(THIS, value);\n\tset_status(THIS, status);\n}\n",
			"import TypeError from '.TypeError';\nimport WeakMap from '.WeakMap';\nimport undefined from '.undefined';\n\nimport { PENDING, REJECTED, FULFILLED, Private, isThenable, isPromise, Status, depend, prepend, Onfulfilled, Onrejected, get_status, set_dependents, set_onfulfilled, set_onrejected, get_dependents, set_value, get_value, set_status } from './_';\n\nexport default typeof WeakMap==='function'\n\t? { then: then }\n\t: {\n\t\t_status: PENDING,\n\t\t_value: undefined,\n\t\t_dependents: undefined,\n\t\t_onfulfilled: undefined,\n\t\t_onrejected: undefined,\n\t\t_onthen: undefined,\n\t\tthen: then\n\t};\n\nfunction then (this :Private, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Private {\n\tvar THIS :Private = this;\n\tvar thenable :Private = new Private;\n\tswitch ( get_status(THIS) ) {\n\t\tcase PENDING:\n\t\t\tprepend(THIS);\n\t\t\tset_dependents(thenable, []);\n\t\t\tif ( typeof onfulfilled==='function' ) { set_onfulfilled(thenable, onfulfilled); }\n\t\t\tif ( typeof onrejected==='function' ) { set_onrejected(thenable, onrejected); }\n\t\t\tget_dependents(THIS)!.push(thenable);\n\t\t\treturn thenable;\n\t\tcase FULFILLED:\n\t\t\tprepend(THIS);\n\t\t\tif ( typeof onfulfilled==='function' ) { onto(THIS, onfulfilled, thenable); }\n\t\t\telse {\n\t\t\t\tset_value(thenable, get_value(THIS));\n\t\t\t\tset_status(thenable, FULFILLED);\n\t\t\t}\n\t\t\treturn thenable;\n\t\tcase REJECTED:\n\t\t\tprepend(THIS);\n\t\t\tif ( typeof onrejected==='function' ) { onto(THIS, onrejected, thenable); }\n\t\t\telse {\n\t\t\t\tset_value(thenable, get_value(THIS));\n\t\t\t\tset_status(thenable, REJECTED);\n\t\t\t}\n\t\t\treturn thenable;\n\t}\n\tthrow TypeError('Method Thenable.prototype.then called on incompatible receiver');\n}\n\nfunction onto (THIS :Private, on :(_ :any) => any, thenable :Private) {\n\ttry { onto_try(thenable, on(get_value(THIS))); }\n\tcatch (error) {\n\t\tif ( get_status(thenable)===PENDING ) {\n\t\t\tset_value(thenable, error);\n\t\t\tset_status(thenable, REJECTED);\n\t\t}\n\t}\n}\n\nfunction onto_try (thenable :Private, value :any) :void {\n\tif ( isThenable(value) ) {\n\t\tprepend(value);\n\t\tvar status :Status = get_status(value);\n\t\tif ( status===PENDING ) {\n\t\t\tset_dependents(thenable, []);\n\t\t\tget_dependents(value)!.push(thenable);\n\t\t}\n\t\telse {\n\t\t\tset_value(thenable, get_value(value));\n\t\t\tset_status(thenable, status);\n\t\t}\n\t}\n\telse if ( isPromise(value) ) {\n\t\tset_dependents(thenable, []);\n\t\tdepend(thenable, value);\n\t}\n\telse {\n\t\tset_value(thenable, value);\n\t\tset_status(thenable, FULFILLED);\n\t}\n}\n",
			"import WeakMap from '.WeakMap';\nimport freeze from '.Object.freeze';\nimport seal from '.Object.seal';\n\nimport version from './version?text';\nexport { version };\n\nimport resolve from './resolve';\nimport reject from './reject';\nimport all from './all';\nimport race from './race';\nimport pend from './pend';\nimport AWAIT from './await';\nexport {\n\tresolve,\n\treject,\n\tall,\n\trace,\n\tpend,\n\tAWAIT as await,\n};\n\nimport { Private, Executor } from './_';\nimport Public from './Thenable';\nimport prototype from './Thenable.prototype';\nPublic.prototype = Private.prototype = typeof WeakMap==='function' ? /*#__PURE__*/ freeze(prototype) : seal ? /*#__PURE__*/ seal(prototype) : prototype;\n\nimport Default from '.default?=';\nexport default Default(Public, {\n\tversion: version,\n\tThenable: Public,\n\tresolve: resolve,\n\treject: reject,\n\tall: all,\n\trace: race,\n\tpend: pend,\n\tawait: AWAIT\n});\n\nvar Thenable :Readonly<{ new (executor :Executor) :Public }> = freeze ? /*#__PURE__*/ freeze(Public) : Public;\ntype Thenable = Public;\nexport { Thenable };\n",
			"export default '4.1.0';",
			"import { isThenable, isPromise, depend, FULFILLED, REJECTED, PENDING, Private, set_dependents, set_value, set_status, get_status } from './_';\n\nexport default function resolve (value? :any) :Public {\n\tif ( isThenable(value) ) { return value; }\n\tvar THIS :Private = new Private;\n\tif ( isPromise(value) ) {\n\t\tset_dependents(THIS, []);\n\t\ttry_depend(THIS, value);\n\t}\n\telse {\n\t\tset_value(THIS, value);\n\t\tset_status(THIS, FULFILLED);\n\t}\n\treturn THIS;\n};\n\nfunction try_depend (THIS :Private, value :any) {\n\ttry { depend(THIS, value); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t}\n\t}\n}\n\nimport Public from './Thenable';",
			"import { REJECTED, Private, set_status, set_value } from './_';\n\nexport default function reject (error? :any) :Public {\n\tvar THIS :Private = new Private;\n\tset_status(THIS, REJECTED);\n\tset_value(THIS, error);\n\treturn THIS;\n};\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { PENDING, REJECTED, FULFILLED, flow, prepend, isThenable, isPromise, Status, Private, Onfulfilled, get_status, set_value, set_status, delete_dependents, set_dependents, get_dependents, get_value } from './_';\n\nexport default function all (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { all_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\tdelete_dependents(THIS);\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction all_try (values :readonly any[], THIS :Private) :void {\n\tset_dependents(THIS, []);\n\tfunction _onrejected (error :any) :any { get_status(THIS)===PENDING && flow(THIS, error, REJECTED); }\n\tvar _value :any[] = [];\n\tvar count :number = 0;\n\tvar counted :boolean | undefined;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tvar _status :Status = get_status(value);\n\t\t\tif ( _status===PENDING ) {\n\t\t\t\t++count;\n\t\t\t\t_value[index] = undefined;\n\t\t\t\tget_dependents(value)!.push({\n\t\t\t\t\t_status: 0,\n\t\t\t\t\t_value: undefined,\n\t\t\t\t\t_dependents: undefined,\n\t\t\t\t\t_onfulfilled: function (index :number) :Onfulfilled {\n\t\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\t\tif ( !--count && counted ) { flow(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}(index),\n\t\t\t\t\t_onrejected: _onrejected\n\t\t\t\t} as Private);\n\t\t\t}\n\t\t\telse if ( _status===REJECTED ) {\n\t\t\t\tset_value(THIS, get_value(value));\n\t\t\t\tset_status(THIS, REJECTED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse { _value[index] = get_value(value); }\n\t\t}\n\t\telse if ( isPromise(value) ) {\n\t\t\t++count;\n\t\t\t_value[index] = undefined;\n\t\t\tvalue.then(\n\t\t\t\tfunction (index :number) :Onfulfilled {\n\t\t\t\t\tvar red :boolean | undefined;\n\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\tif ( red ) { return; }\n\t\t\t\t\t\tred = true;\n\t\t\t\t\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\tif ( !--count && counted ) { flow(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}(index),\n\t\t\t\t_onrejected\n\t\t\t);\n\t\t}\n\t\telse { _value[index] = value; }\n\t}\n\tcounted = true;\n\tif ( !count && get_status(THIS)===PENDING ) {\n\t\tset_value(THIS, _value);\n\t\tset_status(THIS, FULFILLED);\n\t\tdelete_dependents(THIS);\n\t}\n}\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { flow, prepend, PENDING, FULFILLED, REJECTED, Status, isThenable, isPromise, Private, get_status, set_value, set_status, delete_dependents, set_dependents, get_dependents, get_value } from './_';\n\nexport default function race (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { race_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( get_status(THIS)===PENDING ) {\n\t\t\tset_value(THIS, error);\n\t\t\tset_status(THIS, REJECTED);\n\t\t\tdelete_dependents(THIS);\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction race_try (values :readonly any[], THIS :Private) :void {\n\tset_dependents(THIS, []);\n\tfunction _onfulfilled (value :any) :any { get_status(THIS)===PENDING && flow(THIS, value, FULFILLED); }\n\tfunction _onrejected (error :any) :any { get_status(THIS)===PENDING && flow(THIS, error, REJECTED); }\n\tvar that :Private = {\n\t\t_status: 0,\n\t\t_value: undefined,\n\t\t_dependents: undefined,\n\t\t_onfulfilled: _onfulfilled,\n\t\t_onrejected: _onrejected\n\t} as Private;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tif ( isThenable(value) ) {\n\t\t\tprepend(value);\n\t\t\tvar _status :Status = get_status(value);\n\t\t\tif ( _status===PENDING ) { get_dependents(value)!.push(that); }\n\t\t\telse {\n\t\t\t\tset_value(THIS, get_value(value));\n\t\t\t\tset_status(THIS, _status);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if ( isPromise(value) ) {\n\t\t\tvalue.then(_onfulfilled, _onrejected);\n\t\t\tif ( get_status(THIS)!==PENDING ) { break; }\n\t\t}\n\t\telse {\n\t\t\tset_value(THIS, value);\n\t\t\tset_status(THIS, FULFILLED);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nimport Public from './Thenable';",
			"import TypeError from '.TypeError';\n\nimport { Private, Onthen, set_dependents, set_onthen } from './_';\n\nexport default function pend (onthen :Onthen) :Public {\n\tif ( typeof onthen!=='function' ) { throw TypeError('Thenable.pend(onthen is not a function)'); }\n\tvar THIS :Private = new Private;\n\tset_dependents(THIS, []);\n\tset_onthen(THIS, onthen);\n\treturn THIS;\n};\n\nimport Public from './Thenable';"
		],
	"names":
		["Private_call","isThenable","delete_dependents","delete_onrejected","delete_onfulfilled","delete_onthen","delete_onfulfilled_if_has","delete_onrejected_if_has","get_status","get_value","get_dependents","get_onfulfilled","get_onrejected","get_onthen","set_status","set_value","set_dependents","set_onfulfilled","set_onrejected","set_onthen","PENDING","FULFILLED","REJECTED","Private","this","WeakMap","STATUS","VALUE","DEPENDENTS","ONFULFILLED","ONREJECTED","ONTHEN","THIS","set","value","has","get","status","dependents","onfulfilled","onrejected","onthen","getPrototypeOf","Private_prototype","prototype","_dependents","undefined","_onrejected","_onfulfilled","_onthen","_status","_value","isPromise","Promise_prototype","Promise","prependStack","prepending","prepend","thenable","nextStack","push","flow","depend","error","flowStack","flowing","stack","index","length","red","then","AWAIT","Public","executor","TypeError","executed","rEd","onto","on","onto_try","freeze","seal","Default","version","Thenable","resolve","try_depend","reject","all","values","all_try","counted","count","race","race_try","that","pend","await"],
	"mappings":
		"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"
}