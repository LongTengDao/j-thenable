{
	"version":
		3,
	"file":
		"j-thenable.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["_.ts","await.ts","Thenable.ts","Thenable.prototype.ts","export.ts","version?text","resolve.ts","reject.ts","all.ts","race.ts","pend.ts"],
	"sourcesContent":
		[
			"import Promise from '.Promise';\nimport undefined from '.undefined';\n\nexport var PENDING :0 = 0;\nexport var FULFILLED :1 = 1;\nexport var REJECTED :2 = 2;\n\nexport var THENABLE :1 = 1;\nexport var PROMISE :2 = 2;\n\nexport var Private :{ new () :Private } = function Thenable () {} as any;\n\nexport function isThenable (value :any) :value is Private {\n\treturn value instanceof Private;\n}\n\nexport var Type :(value :any) => typeof value extends Private ? 1 : typeof value extends Promise<any> ? 2 : 0 =\n\t\n\ttypeof Promise==='function'\n\t\t\n\t\t? function () {\n\t\t\tvar Native = function () {};\n\t\t\tNative.prototype = Promise.prototype;\n\t\t\treturn function Type (value :any) :any {\n\t\t\t\treturn isThenable(value) ? THENABLE : value instanceof Native ? PROMISE : 0;\n\t\t\t};\n\t\t}()\n\t\t\n\t\t: function Type (value :any) :any {\n\t\t\treturn isThenable(value) ? THENABLE : 0;\n\t\t};\n\nvar stack :Stack | null = null;\n\nexport function flow (thenable :Private, value :any, status :Status) :void {\n\tif ( stack ) {\n\t\tstack = { nextStack: stack, thenable: thenable, value: value, status: status };\n\t\treturn;\n\t}\n\tfor ( var type :Type, _status :Status; ; ) {\n\t\tstack: {\n\t\t\tif ( status===FULFILLED ) {\n\t\t\t\tif ( thenable._onrejected ) { thenable._onrejected = undefined; }\n\t\t\t\tvar _onfulfilled :Onfulfilled | undefined = thenable._onfulfilled;\n\t\t\t\tif ( _onfulfilled ) {\n\t\t\t\t\tthenable._onfulfilled = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttype = Type(value = _onfulfilled(value));\n\t\t\t\t\t\tif ( type===THENABLE ) {\n\t\t\t\t\t\t\t_status = value._status;\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tvalue._dependents!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = value._value;\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( type===PROMISE ) {\n\t\t\t\t\t\t\tdepend(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( thenable._status!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t\tstatus = REJECTED;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( thenable._onfulfilled ) { thenable._onfulfilled = undefined; }\n\t\t\t\tvar _onrejected :Onrejected | undefined = thenable._onrejected;\n\t\t\t\tif ( _onrejected ) {\n\t\t\t\t\tthenable._onrejected = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttype = Type(value = _onrejected(value));\n\t\t\t\t\t\tif ( type===THENABLE ) {\n\t\t\t\t\t\t\t_status = value._status;\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tvalue._dependents!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = value._value;\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( type===PROMISE ) {\n\t\t\t\t\t\t\tdepend(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { status = FULFILLED; }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( thenable._status!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthenable._value = value;\n\t\t\tthenable._status = status;\n\t\t\tvar _dependents :Private[] | null = thenable._dependents;\n\t\t\tif ( _dependents ) {\n\t\t\t\tthenable._dependents = null;\n\t\t\t\tfor ( var index :number = _dependents.length; index; ) {\n\t\t\t\t\tstack = { nextStack: stack, thenable: _dependents[--index], value: value, status: status };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( !stack ) { break; }\n\t\tthenable = stack.thenable;\n\t\tvalue = stack.value;\n\t\tstatus = stack.status;\n\t\tstack = stack.nextStack;\n\t}\n}\n\nexport function depend (thenable :Private, value :Readonly<{ then (...args :any[]) :any }>) :void {\n\tvar red :boolean | undefined;\n\tvalue.then(\n\t\tfunction onfulfilled (value :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tflow(thenable, value, FULFILLED);\n\t\t},\n\t\tfunction onrejected (error :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tflow(thenable, error, REJECTED);\n\t\t}\n\t);\n}\n\ntype Stack = { nextStack :Stack | null, thenable :Private, value :any, status :Status };\n\nexport type Private = {\n\t_status :Status,\n\t_value :any,\n\t_dependents :Private[] | null,\n\t_onfulfilled :Onfulfilled | undefined,\n\t_onrejected :Onrejected | undefined,\n\t_Value :( () => any ) | undefined,\n\tthen (this :Private, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Private,\n};\n\nexport type Onfulfilled = (value :any) => any;\n\nexport type Onrejected = (error :any) => any;\n\nexport type Status = 0 | 1 | 2;\n\nexport type Type = 0 | 1 | 2;\n\nexport type Executor = (resolve? :(value :any) => void, reject? :(error :any) => void) => void;\n",
			"import { isThenable, FULFILLED, REJECTED } from './_';\n\nexport default {\n\tawait: function (value :any) :any {\n\t\tif ( isThenable(value) ) {\n\t\t\tswitch ( value._status ) {\n\t\t\t\tcase FULFILLED:\n\t\t\t\t\treturn value._value;\n\t\t\t\tcase REJECTED:\n\t\t\t\t\tthrow value._value;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}.await;\n",
			"import TypeError from '.TypeError';\n\nimport { Status, PENDING, FULFILLED, REJECTED, Type, THENABLE, PROMISE, Type, flow, depend, Private, Executor, Onfulfilled, Onrejected } from './_';\n\nexport { Public as default };\n\ntype Public = Readonly<object & {\n\tthen (this :Public, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Public,\n}>;\n\nvar Public :{ new (executor :Executor) :Public } = function Thenable (this :Private, executor :Executor) :void {\n\tif ( typeof executor!=='function' ) { throw TypeError('Thenable executor is not a function'); }\n\tvar executed :boolean | undefined;\n\tvar red :boolean | undefined;\n\tvar _value :any;\n\tvar _status :Status | undefined;\n\tvar THIS :Private = this;\n\ttry {\n\t\texecutor(\n\t\t\tfunction resolve (value :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar type :Type = Type(value);\n\t\t\t\t\t\tif ( type===THENABLE ) {\n\t\t\t\t\t\t\t_status = value._status;\n\t\t\t\t\t\t\tif ( _status===PENDING ) { value._dependents!.push(THIS); }\n\t\t\t\t\t\t\telse { flow(THIS, value._value, _status!); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( type===PROMISE ) { depend(THIS, value); }\n\t\t\t\t\t\telse { flow(THIS, value, FULFILLED); }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) { if ( THIS._status===PENDING ) { flow(THIS, error, REJECTED); } }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_value = value;\n\t\t\t\t\t_status = FULFILLED;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction reject (error :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) { flow(THIS, error, REJECTED); }\n\t\t\t\telse {\n\t\t\t\t\t_value = error;\n\t\t\t\t\t_status = REJECTED;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tif ( !red ) {\n\t\t\texecuted = true;\n\t\t\tTHIS._dependents = [];\n\t\t\treturn;\n\t\t}\n\t}\n\tcatch (error) {\n\t\tif ( !red ) {\n\t\t\tred = true;\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\treturn;\n\t\t}\n\t}\n\ttry { rEd(THIS, _status, _value); }\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\tTHIS._dependents = null;\n\t\t}\n\t}\n} as any;\n\nfunction rEd (THIS :Private, _status :Status | undefined, _value :any) :void {\n\tif ( _status===FULFILLED ) {\n\t\tvar type :Type = Type(_value);\n\t\tif ( type===THENABLE ) {\n\t\t\t_status = _value._status;\n\t\t\tif ( _status===PENDING ) {\n\t\t\t\tTHIS._dependents = [];\n\t\t\t\t_value._dependents!.push(THIS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tTHIS._value = _value._value;\n\t\t\t\tTHIS._status = _status;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif ( type===PROMISE ) {\n\t\t\tTHIS._dependents = [];\n\t\t\tdepend(THIS, _value);\n\t\t\treturn;\n\t\t}\n\t}\n\tTHIS._value = _value;\n\tTHIS._status = _status!;\n}\n",
			"import TypeError from '.TypeError';\nimport undefined from '.undefined';\n\nimport { PENDING, REJECTED, FULFILLED, Private, Type, THENABLE, PROMISE, Type, Status, depend, flow, Onfulfilled, Onrejected } from './_';\n\nexport default {\n\t_status: PENDING,\n\t_value: undefined,\n\t_dependents: null,\n\t_onfulfilled: undefined,\n\t_onrejected: undefined,\n\t_Value: undefined,\n\tthen: function then (this :Private, onfulfilled? :Onfulfilled, onrejected? :Onrejected) :Private {\n\t\tvar THIS :Private = this;\n\t\tvar callbackfn :( () => any ) | undefined = THIS._Value;\n\t\tif ( callbackfn ) {\n\t\t\tTHIS._Value = undefined;\n\t\t\tcallbackAs(callbackfn, THIS);\n\t\t}\n\t\tvar thenable :Private = new Private;\n\t\tswitch ( THIS._status ) {\n\t\t\tcase PENDING:\n\t\t\t\tthenable._dependents = [];\n\t\t\t\tthenable._onfulfilled = onfulfilled;\n\t\t\t\tthenable._onrejected = onrejected;\n\t\t\t\tTHIS._dependents!.push(thenable);\n\t\t\t\treturn thenable;\n\t\t\tcase FULFILLED:\n\t\t\t\tif ( typeof onfulfilled==='function' ) { onto(THIS, onfulfilled, thenable); }\n\t\t\t\telse {\n\t\t\t\t\tthenable._value = THIS._value;\n\t\t\t\t\tthenable._status = FULFILLED;\n\t\t\t\t}\n\t\t\t\treturn thenable;\n\t\t\tcase REJECTED:\n\t\t\t\tif ( typeof onrejected==='function' ) { onto(THIS, onrejected, thenable); }\n\t\t\t\telse {\n\t\t\t\t\tthenable._value = THIS._value;\n\t\t\t\t\tthenable._status = REJECTED;\n\t\t\t\t}\n\t\t\t\treturn thenable;\n\t\t}\n\t\tthrow TypeError('Method Thenable.prototype.then called on incompatible receiver');\n\t}\n};\n\nfunction callbackAs (callbackfn :() => any, THIS :Private) :void {\n\ttry { flow(THIS, callbackfn(), FULFILLED); }\n\tcatch (error) { flow(THIS, error, REJECTED); }\n}\n\nfunction onto (THIS :Private, on :(_ :any) => any, thenable :Private) {\n\ttry { onto_try(thenable, on(THIS._value)); }\n\tcatch (error) {\n\t\tif ( thenable._status===PENDING ) {\n\t\t\tthenable._value = error;\n\t\t\tthenable._status = REJECTED;\n\t\t}\n\t}\n}\n\nfunction onto_try (thenable :Private, value :any) :void {\n\tvar type :Type = Type(value);\n\tif ( type===THENABLE ) {\n\t\tvar status :Status = value._status;\n\t\tif ( status===PENDING ) {\n\t\t\tthenable._dependents = [];\n\t\t\tvalue._dependents!.push(thenable);\n\t\t}\n\t\telse {\n\t\t\tthenable._value = value._value;\n\t\t\tthenable._status = status;\n\t\t}\n\t}\n\telse if ( value===PROMISE ) {\n\t\tthenable._dependents = [];\n\t\tdepend(thenable, value);\n\t}\n\telse {\n\t\tthenable._value = value;\n\t\tthenable._status = FULFILLED;\n\t}\n}\n",
			"import seal from '.Object.seal';\nimport freeze from '.Object.freeze';\n\nimport version from './version?text';\nexport { version };\n\nimport resolve from './resolve';\nimport reject from './reject';\nimport all from './all';\nimport race from './race';\nimport pend from './pend';\nimport AWAIT from './await';\nexport {\n\tresolve,\n\treject,\n\tall,\n\trace,\n\tpend,\n\tAWAIT as await,\n};\n\nimport { Private, Executor } from './_';\nimport Public from './Thenable';\nimport prototype from './Thenable.prototype';\nPublic.prototype = Private.prototype = seal ? /*#__PURE__*/ seal(prototype) : prototype;\n\nimport Default from '.default?=';\nexport default Default(Public, {\n\tversion: version,\n\tThenable: Public,\n\tresolve: resolve,\n\treject: reject,\n\tall: all,\n\trace: race,\n\tpend: pend,\n\tawait: AWAIT\n});\n\nvar Thenable :Readonly<{ new (executor :Executor) :Public }> = freeze ? /*#__PURE__*/ freeze(Public) : Public;\ntype Thenable = Public;\nexport { Thenable };\n",
			"export default '4.0.0';",
			"import { Type, THENABLE, PROMISE, Type, depend, FULFILLED, REJECTED, PENDING, Private } from './_';\n\nexport default function resolve (value? :any) :Public {\n\tvar type :Type = Type(value);\n\tif ( type===THENABLE ) { return value; }\n\tvar THIS :Private = new Private;\n\tif ( type===PROMISE ) {\n\t\tTHIS._dependents = [];\n\t\ttry_depend(THIS, value);\n\t}\n\telse {\n\t\tTHIS._value = value;\n\t\tTHIS._status = FULFILLED;\n\t}\n\treturn THIS;\n};\n\nfunction try_depend (THIS :Private, value :any) {\n\ttry { depend(THIS, value); }\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t}\n\t}\n}\n\nimport Public from './Thenable';",
			"import { REJECTED, Private } from './_';\n\nexport default function reject (error? :any) :Public {\n\tvar THIS :Private = new Private;\n\tTHIS._status = REJECTED;\n\tTHIS._value = error;\n\treturn THIS;\n};\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { PENDING, REJECTED, FULFILLED, flow, Type, THENABLE, PROMISE, Type, Status, Private, Onfulfilled } from './_';\n\nexport default function all (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { all_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\tTHIS._dependents = null;\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction all_try (values :readonly any[], THIS :Private) :void {\n\tTHIS._dependents = [];\n\tfunction _onrejected (error :any) :any { THIS._status===PENDING && flow(THIS, error, REJECTED); }\n\tvar _value :any[] = [];\n\tvar count :number = 0;\n\tvar counted :boolean | undefined;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tvar type :Type = Type(value);\n\t\tif ( type===THENABLE ) {\n\t\t\tvar _status :Status = value._status;\n\t\t\tif ( _status===PENDING ) {\n\t\t\t\t++count;\n\t\t\t\t_value[index] = undefined;\n\t\t\t\tvalue._dependents!.push({\n\t\t\t\t\t_status: 0,\n\t\t\t\t\t_value: undefined,\n\t\t\t\t\t_dependents: null,\n\t\t\t\t\t_onfulfilled: function (index :number) :Onfulfilled {\n\t\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\t\tif ( THIS._status===PENDING ) {\n\t\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\t\tif ( !--count && counted ) { flow(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}(index),\n\t\t\t\t\t_onrejected: _onrejected\n\t\t\t\t} as Private);\n\t\t\t}\n\t\t\telse if ( _status===REJECTED ) {\n\t\t\t\tTHIS._value = value._value;\n\t\t\t\tTHIS._status = REJECTED;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse { _value[index] = value._value; }\n\t\t}\n\t\telse if ( type===PROMISE ) {\n\t\t\t++count;\n\t\t\t_value[index] = undefined;\n\t\t\tvalue.then(\n\t\t\t\tfunction (index :number) :Onfulfilled {\n\t\t\t\t\tvar red :boolean | undefined;\n\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\tif ( red ) { return; }\n\t\t\t\t\t\tred = true;\n\t\t\t\t\t\tif ( THIS._status===PENDING ) {\n\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\tif ( !--count && counted ) { flow(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}(index),\n\t\t\t\t_onrejected\n\t\t\t);\n\t\t}\n\t\telse { _value[index] = value; }\n\t}\n\tcounted = true;\n\tif ( !count && THIS._status===PENDING ) {\n\t\tTHIS._value = _value;\n\t\tTHIS._status = FULFILLED;\n\t\tTHIS._dependents = null;\n\t}\n}\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { flow, PENDING, FULFILLED, REJECTED, Status, Type, THENABLE, PROMISE, Type, Private } from './_';\n\nexport default function race (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { race_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\tTHIS._dependents = null;\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction race_try (values :readonly any[], THIS :Private) :void {\n\tTHIS._dependents = [];\n\tfunction _onfulfilled (value :any) :any { THIS._status===PENDING && flow(THIS, value, FULFILLED); }\n\tfunction _onrejected (error :any) :any { THIS._status===PENDING && flow(THIS, error, REJECTED); }\n\tvar that :Private = {\n\t\t_status: 0,\n\t\t_value: undefined,\n\t\t_dependents: null,\n\t\t_onfulfilled: _onfulfilled,\n\t\t_onrejected: _onrejected\n\t} as Private;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tvar type :Type = Type(value);\n\t\tif ( type===THENABLE ) {\n\t\t\tvar _status :Status = value._status;\n\t\t\tif ( _status===PENDING ) { value._dependents!.push(that); }\n\t\t\telse {\n\t\t\t\tTHIS._value = value._value;\n\t\t\t\tTHIS._status = _status;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if ( type===PROMISE ) {\n\t\t\tvalue.then(_onfulfilled, _onrejected);\n\t\t\tif ( THIS._status!==PENDING ) { break; }\n\t\t}\n\t\telse {\n\t\t\tTHIS._value = value;\n\t\t\tTHIS._status = FULFILLED;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nimport Public from './Thenable';",
			"import { Private } from './_';\n\nexport default function pend (callbackfn :() => any) :Public {\n\tvar THIS :Private = new Private;\n\tTHIS._dependents = [];\n\tTHIS._Value = callbackfn;\n\treturn THIS;\n};\n\nimport Public from './Thenable';"
		],
	"names":
		["PENDING","FULFILLED","REJECTED","THENABLE","PROMISE","Private","isThenable","value","Native","Type","Promise","prototype","stack","flow","thenable","status","nextStack","type","_status","_onrejected","undefined","_onfulfilled","_dependents","push","_value","depend","error","index","length","red","then","AWAIT","Public","executor","TypeError","executed","THIS","this","rEd","_Value","onfulfilled","onrejected","callbackfn","callbackAs","onto","on","onto_try","seal","Default","version","Thenable","resolve","try_depend","reject","all","values","all_try","counted","count","race","race_try","that","pend","await"],
	"mappings":
		"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"
}