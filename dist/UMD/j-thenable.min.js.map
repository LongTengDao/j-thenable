{
	"version":
		3,
	"file":
		"j-thenable.min.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["_.ts","Thenable.ts","Thenable.prototype.then.ts","Thenable.prototype.ts","export.ts","version?text","resolve.ts","reject.ts","all.ts","race.ts"],
	"sourcesContent":
		[
			"import undefined from '.undefined';\n\nexport var PENDING :0 = 0;\nexport var FULFILLED :1 = 1;\nexport var REJECTED :2 = 2;\n\nexport var Private :{ new () :Private } = function Thenable () {} as any;\n\nexport function isPrivate (value :any) :value is Private {\n\treturn value instanceof Private;\n}\n\nexport function isPublic (value :any) :value is { then (onfulfilled? :Function, onrejected? :Function) :any } {\n\treturn value!=null && typeof value.then==='function';\n}\n\nvar stack :Stack = null;\n\nexport function r (thenable :Private, value :any, status :Status) :void {\n\tif ( stack ) {\n\t\tstack = { nextStack: stack, thenable: thenable, value: value, status: status };\n\t\treturn;\n\t}\n\tfor ( ; ; ) {\n\t\tstack: {\n\t\t\tif ( status===FULFILLED ) {\n\t\t\t\tif ( thenable._onrejected ) { thenable._onrejected = undefined; }\n\t\t\t\tvar _onfulfilled :Function | undefined = thenable._onfulfilled;\n\t\t\t\tif ( _onfulfilled ) {\n\t\t\t\t\tthenable._onfulfilled = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = _onfulfilled(value);\n\t\t\t\t\t\tif ( isPrivate(value) ) {\n\t\t\t\t\t\t\tvar _status :Status = value._status;\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tvalue._on!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = value._value;\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPublic(value) ) {\n\t\t\t\t\t\t\twait(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( thenable._status!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t\tstatus = REJECTED;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( thenable._onfulfilled ) { thenable._onfulfilled = undefined; }\n\t\t\t\tvar _onrejected :Function | undefined = thenable._onrejected;\n\t\t\t\tif ( _onrejected ) {\n\t\t\t\t\tthenable._onrejected = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = _onrejected(value);\n\t\t\t\t\t\tif ( isPrivate(value) ) {\n\t\t\t\t\t\t\tvar _status :Status = value._status;\n\t\t\t\t\t\t\tif ( _status===PENDING ) {\n\t\t\t\t\t\t\t\tvalue._on!.push(thenable);\n\t\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalue = value._value;\n\t\t\t\t\t\t\t\tstatus = _status;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPublic(value) ) {\n\t\t\t\t\t\t\twait(thenable, value);\n\t\t\t\t\t\t\tbreak stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { status = FULFILLED; }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tif ( thenable._status!==PENDING ) { break stack; }\n\t\t\t\t\t\tvalue = error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthenable._value = value;\n\t\t\tthenable._status = status;\n\t\t\tvar _on :Private[] | null = thenable._on;\n\t\t\tif ( _on ) {\n\t\t\t\tthenable._on = null;\n\t\t\t\tfor ( var index :number = _on.length; index; ) {\n\t\t\t\t\tstack = { nextStack: stack, thenable: _on[--index], value: value, status: status };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( !stack ) { break; }\n\t\tthenable = stack.thenable;\n\t\tvalue = stack.value;\n\t\tstatus = stack.status;\n\t\tstack = stack.nextStack;\n\t}\n}\n\nexport function wait (thenable :Private, value :{ then (onfulfilled? :Function, onrejected? :Function) :any }) :void {\n\tvar red :boolean | undefined;\n\tvalue.then(\n\t\tfunction onfulfilled (value :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tr(thenable, value, FULFILLED);\n\t\t},\n\t\tfunction onrejected (error :any) :void {\n\t\t\tif ( red ) { return; }\n\t\t\tred = true;\n\t\t\tr(thenable, error, REJECTED);\n\t\t}\n\t);\n}\n\ntype Stack = { nextStack :Stack, thenable :Private, value :any, status :Status } | null;\n\nexport type Private = {\n\t_status :Status,\n\t_value :any,\n\t_on :Private[] | null,\n\t_onfulfilled :Function | undefined,\n\t_onrejected :Function | undefined,\n\tthen (onfulfilled? :Function, onrejected? :Function) :Private,\n};\n\nexport type Status = 0 | 1 | 2;\n\nexport type Executor = (resolve :Function, reject :Function) => void;\n\nexport type Function = (value :any) => void;\n",
			"import TypeError from '.TypeError';\n\nimport { Status, PENDING, FULFILLED, REJECTED, isPrivate, isPublic, r, wait, Function, Private, Executor } from './_';\n\nexport { Public as default };\n\ntype Public = Readonly<object & {\n\tthen (this :Public, onfulfilled? :Function, onrejected? :Function) :Public,\n}>;\n\nvar Public :{ new (executor :Executor) :Public } = function Thenable (this :Private, executor :Executor) :void {\n\tif ( typeof executor!=='function' ) { throw TypeError('Thenable executor is not a function'); }\n\tvar executed :boolean | undefined;\n\tvar red :boolean | undefined;\n\tvar _value :any;\n\tvar _status :Status | undefined;\n\tvar THIS :Private = this;\n\ttry {\n\t\texecutor(\n\t\t\tfunction resolve (value :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif ( isPrivate(value) ) {\n\t\t\t\t\t\t\t_status = value._status;\n\t\t\t\t\t\t\tif ( _status===PENDING ) { value._on!.push(THIS); }\n\t\t\t\t\t\t\telse { r(THIS, value._value, _status!); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( isPublic(value) ) { wait(THIS, value); }\n\t\t\t\t\t\telse { r(THIS, value, FULFILLED); }\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) { if ( THIS._status===PENDING ) { r(THIS, error, REJECTED); } }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_value = value;\n\t\t\t\t\t_status = FULFILLED;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction reject (error :any) {\n\t\t\t\tif ( red ) { return; }\n\t\t\t\tred = true;\n\t\t\t\tif ( executed ) { r(THIS, error, REJECTED); }\n\t\t\t\telse {\n\t\t\t\t\t_value = error;\n\t\t\t\t\t_status = REJECTED;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tif ( !red ) {\n\t\t\texecuted = true;\n\t\t\tTHIS._on = [];\n\t\t\treturn;\n\t\t}\n\t}\n\tcatch (error) {\n\t\tif ( !red ) {\n\t\t\tred = true;\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\treturn;\n\t\t}\n\t}\n\ttry { rEd(THIS, _status, _value); }\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\tTHIS._on = null;\n\t\t}\n\t}\n} as any;\n\nfunction rEd (THIS :Private, _status :Status | undefined, _value :any) :void {\n\tif ( _status===FULFILLED ) {\n\t\tif ( isPrivate(_value) ) {\n\t\t\t_status = _value._status;\n\t\t\tif ( _status===PENDING ) {\n\t\t\t\tTHIS._on = [];\n\t\t\t\t_value._on!.push(THIS);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tTHIS._value = _value._value;\n\t\t\t\tTHIS._status = _status;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif ( isPublic(_value) ) {\n\t\t\tTHIS._on = [];\n\t\t\twait(THIS, _value);\n\t\t\treturn;\n\t\t}\n\t}\n\tTHIS._value = _value;\n\tTHIS._status = _status!;\n}\n",
			"import TypeError from '.TypeError';\n\nimport { PENDING, REJECTED, FULFILLED, Function, Private, isPrivate, Status, isPublic, wait } from './_';\n\nexport default function then (this :Private, onfulfilled? :Function, onrejected? :Function) :Private {\n\tvar THIS :Private = this;\n\tvar thenable :Private = new Private;\n\tswitch ( THIS._status ) {\n\t\tcase PENDING:\n\t\t\tthenable._on = [];\n\t\t\tthenable._onfulfilled = onfulfilled;\n\t\t\tthenable._onrejected = onrejected;\n\t\t\tTHIS._on!.push(thenable);\n\t\t\treturn thenable;\n\t\tcase FULFILLED:\n\t\t\tif ( typeof onfulfilled==='function' ) { onto(THIS, onfulfilled, thenable); }\n\t\t\telse {\n\t\t\t\tthenable._value = THIS._value;\n\t\t\t\tthenable._status = FULFILLED;\n\t\t\t}\n\t\t\treturn thenable;\n\t\tcase REJECTED:\n\t\t\tif ( typeof onrejected==='function' ) { onto(THIS, onrejected, thenable); }\n\t\t\telse {\n\t\t\t\tthenable._value = THIS._value;\n\t\t\t\tthenable._status = REJECTED;\n\t\t\t}\n\t\t\treturn thenable;\n\t}\n\tthrow TypeError('Method Thenable.prototype.then called on incompatible receiver');\n};\n\nfunction onto (THIS :Private, on :Function, thenable :Private) {\n\ttry { onto_try(thenable, on(THIS._value)); }\n\tcatch (error) {\n\t\tif ( thenable._status===PENDING ) {\n\t\t\tthenable._value = error;\n\t\t\tthenable._status = REJECTED;\n\t\t}\n\t}\n}\n\nfunction onto_try (thenable :Private, value :any) :void {\n\tif ( isPrivate(value) ) {\n\t\tvar status :Status = value._status;\n\t\tif ( status===PENDING ) {\n\t\t\tthenable._on = [];\n\t\t\tvalue._on!.push(thenable);\n\t\t}\n\t\telse {\n\t\t\tthenable._value = value._value;\n\t\t\tthenable._status = status;\n\t\t}\n\t}\n\telse if ( isPublic(value) ) {\n\t\tthenable._on = [];\n\t\twait(thenable, value);\n\t}\n\telse {\n\t\tthenable._value = value;\n\t\tthenable._status = FULFILLED;\n\t}\n}\n",
			"import undefined from '.undefined';\n\nimport { PENDING } from './_';\nimport then from './Thenable.prototype.then';\n\nexport default {\n\t_status: PENDING,\n\t_value: undefined,\n\t_on: null,\n\t_onfulfilled: undefined,\n\t_onrejected: undefined,\n\tthen: then\n};\n",
			"import seal from '.Object.seal';\nimport freeze from '.Object.freeze';\n\nimport version from './version?text';\nexport { version };\n\nimport resolve from './resolve';\nimport reject from './reject';\nimport all from './all';\nimport race from './race';\nexport {\n\tresolve,\n\treject,\n\tall,\n\trace,\n};\n\nimport { Private, Executor } from './_';\nimport Public from './Thenable';\nimport prototype from './Thenable.prototype';\nPublic.prototype = Private.prototype = seal ? /*#__PURE__*/ seal(prototype) : prototype;\n\nimport Default from '.default?=';\nexport default Default(Public, {\n\tversion: version,\n\tThenable: Public,\n\tresolve: resolve,\n\treject: reject,\n\tall: all,\n\trace: race\n});\n\nvar Thenable :Readonly<{ new (executor :Executor) :Public }> = freeze ? /*#__PURE__*/ freeze(Public) : Public;\ntype Thenable = Public;\nexport { Thenable };\n",
			"export default '3.0.0';",
			"import { isPrivate, isPublic, wait, FULFILLED, REJECTED, PENDING, Private } from './_';\n\nexport default function resolve (value :any) :Public {\n\tif ( isPrivate(value) ) { return value; }\n\tvar THIS :Private = new Private;\n\ttry {\n\t\tif ( isPublic(value) ) {\n\t\t\tTHIS._on = [];\n\t\t\twait(THIS, value);\n\t\t}\n\t\telse {\n\t\t\tTHIS._value = value;\n\t\t\tTHIS._status = FULFILLED;\n\t\t}\n\t}\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t}\n\t}\n\treturn THIS;\n};\n\nimport Public from './Thenable';",
			"import { REJECTED, Private } from './_';\n\nexport default function reject (error :any) :Public {\n\tvar THIS :Private = new Private;\n\tTHIS._status = REJECTED;\n\tTHIS._value = error;\n\treturn THIS;\n};\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { PENDING, REJECTED, FULFILLED, r, isPrivate, isPublic, Status, Function, Private } from './_';\n\nexport default function all (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { all_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\tTHIS._on = null;\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction all_try (values :readonly any[], THIS :Private) :void {\n\tTHIS._on = [];\n\tfunction _onrejected (error :any) :void { THIS._status===PENDING && r(THIS, error, REJECTED); }\n\tvar _value :any[] = [];\n\tvar count :number = 0;\n\tvar counted :boolean | undefined;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tif ( isPrivate(value) ) {\n\t\t\tvar _status :Status = value._status;\n\t\t\tif ( _status===PENDING ) {\n\t\t\t\t++count;\n\t\t\t\t_value[index] = undefined;\n\t\t\t\tvalue._on!.push({\n\t\t\t\t\t_status: 0,\n\t\t\t\t\t_value: undefined,\n\t\t\t\t\t_on: null,\n\t\t\t\t\t_onfulfilled: function (index :number) :Function {\n\t\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\t\tif ( THIS._status===PENDING ) {\n\t\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\t\tif ( !--count && counted ) { r(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}(index),\n\t\t\t\t\t_onrejected: _onrejected\n\t\t\t\t} as Private);\n\t\t\t}\n\t\t\telse if ( _status===REJECTED ) {\n\t\t\t\tTHIS._value = value._value;\n\t\t\t\tTHIS._status = REJECTED;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse { _value[index] = value._value; }\n\t\t}\n\t\telse if ( isPublic(value) ) {\n\t\t\t++count;\n\t\t\t_value[index] = undefined;\n\t\t\tvalue.then(\n\t\t\t\tfunction (index :number) :Function {\n\t\t\t\t\tvar red :boolean | undefined;\n\t\t\t\t\treturn function (value :any) :void {\n\t\t\t\t\t\tif ( red ) { return; }\n\t\t\t\t\t\tred = true;\n\t\t\t\t\t\tif ( THIS._status===PENDING ) {\n\t\t\t\t\t\t\t_value[index] = value;\n\t\t\t\t\t\t\tif ( !--count && counted ) { r(THIS, _value, FULFILLED); }\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}(index),\n\t\t\t\t_onrejected\n\t\t\t);\n\t\t}\n\t\telse { _value[index] = value; }\n\t}\n\tcounted = true;\n\tif ( !count && THIS._status===PENDING ) {\n\t\tTHIS._value = _value;\n\t\tTHIS._status = FULFILLED;\n\t\tTHIS._on = null;\n\t}\n}\n\nimport Public from './Thenable';",
			"import undefined from '.undefined';\n\nimport { r, PENDING, FULFILLED, REJECTED, Status, isPrivate, isPublic, Private } from './_';\n\nexport default function race (values :readonly any[]) :Public {\n\tvar THIS :Private = new Private;\n\ttry { race_try(values, THIS); }\n\tcatch (error) {\n\t\tif ( THIS._status===PENDING ) {\n\t\t\tTHIS._value = error;\n\t\t\tTHIS._status = REJECTED;\n\t\t\tTHIS._on = null;\n\t\t}\n\t}\n\treturn THIS;\n};\n\nfunction race_try (values :readonly any[], THIS :Private) :void {\n\tTHIS._on = [];\n\tfunction _onfulfilled (value :any) :void { THIS._status===PENDING && r(THIS, value, FULFILLED); }\n\tfunction _onrejected (error :any) :void { THIS._status===PENDING && r(THIS, error, REJECTED); }\n\tvar that :Private = {\n\t\t_status: 0,\n\t\t_value: undefined,\n\t\t_on: null,\n\t\t_onfulfilled: _onfulfilled,\n\t\t_onrejected: _onrejected\n\t} as Private;\n\tfor ( var length :number = values.length, index :number = 0; index<length; ++index ) {\n\t\tvar value :any = values[index];\n\t\tif ( isPrivate(value) ) {\n\t\t\tvar _status :Status = value._status;\n\t\t\tif ( _status===PENDING ) { value._on!.push(that); }\n\t\t\telse {\n\t\t\t\tTHIS._value = value._value;\n\t\t\t\tTHIS._status = _status;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if ( isPublic(value) ) {\n\t\t\tvalue.then(_onfulfilled, _onrejected);\n\t\t\tif ( THIS._status!==PENDING ) { break; }\n\t\t}\n\t\telse {\n\t\t\tTHIS._value = value;\n\t\t\tTHIS._status = FULFILLED;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nimport Public from './Thenable';"
		],
	"names":
		["PENDING","FULFILLED","REJECTED","Private","isPrivate","value","isPublic","then","stack","r","thenable","status","nextStack","_onrejected","undefined","_onfulfilled","_status","_on","push","_value","wait","error","index","length","red","Public","executor","TypeError","executed","THIS","this","rEd","onto","on","onto_try","prototype","onfulfilled","onrejected","seal","Default","version","Thenable","resolve","reject","all","values","all_try","counted","count","race","race_try","that"],
	"mappings":
		"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"
}